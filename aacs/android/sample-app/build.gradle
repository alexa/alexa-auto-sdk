// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.versions = [
        'kotlin': '1.6.10',
        'androidx_core': '1.3.2',
        'androidx_appcompat': '1.2.0',
        'androidx_annotation': '1.1.0',
        'androidx_constraint': '2.0.1',
        'androidx_preference': '1.1.1',
        'androidx_navigation': '2.3.0',
        'androidx_lifecycle': '2.2.0',
        'androidx_recycler_view': '1.1.0',
        'androidx_media': '1.1.0',
        'androidx_fragment': '1.3.6',
        'dagger': '2.22',
        'exoplayer': '2.13.3',
        'moshi': '1.9.3',

        // Test Dependencies
        'mockito': '3.4.0',
    ]

    ext.deps = [
        'kotlin_stdlib': "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}",

        'androidx_core': "androidx.core:core:${versions.androidx_core}",
        'androidx_core_ktx': "androidx.core:core-ktx:${versions.androidx_core}",
        'androidx_appcompat': "androidx.appcompat:appcompat:${versions.androidx_appcompat}",
        'androidx_annotation': "androidx.annotation:annotation:${versions.androidx_annotation}",
        'androidx_constraint': "androidx.constraintlayout:constraintlayout:${versions.androidx_constraint}",
        'androidx_viewmodel': "androidx.lifecycle:lifecycle-viewmodel:${versions.androidx_lifecycle}",
        'androidx_preference': "androidx.preference:preference:${versions.androidx_preference}",
        'androidx_navigation_fragment': "androidx.navigation:navigation-fragment:${versions.androidx_navigation}",
        'androidx_navigation_ui': "androidx.navigation:navigation-ui:${versions.androidx_navigation}",
        'androidx_recycler_view': "androidx.recyclerview:recyclerview:${versions.androidx_recycler_view}",
        'androidx_fragment': "androidx.fragment:fragment:${versions.androidx_recycler_view}",

        'androidx_media': "androidx.media:media:${versions.androidx_media}",

        'dagger': "com.google.dagger:dagger:${versions.dagger}",
        'dagger_compiler': "com.google.dagger:dagger-compiler:${versions.dagger}",

        'moshi': "com.squareup.moshi:moshi:${versions.moshi}",
        'moshi_codegen': "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}",

        'rxjava3': "io.reactivex.rxjava3:rxjava:3.0.4",
        'glide': "com.github.bumptech.glide:glide:4.11.0",
        'glide_compiler': "com.github.bumptech.glide:compiler:4.11.0",
        'google_zxing': 'com.google.zxing:core:3.2.0',
        'google_guava': 'com.google.guava:guava:27.0.1-android',
        'eventbus': 'org.greenrobot:eventbus:3.2.0',
        'okhttp': 'com.squareup.okhttp3:okhttp:3.9.1',

        'android_appcompat': 'com.android.support:appcompat-v7:28+',
        'android_design': 'com.android.support:design:28+',
        'android_constraint': 'com.android.support.constraint:constraint-layout:1.0.2',
        'android_cardview': 'com.android.support:cardview-v7:28+',
        'android_recyclerview': 'com.android.support:recyclerview-v7:28+',

        'exoplayer_core': "com.google.android.exoplayer:exoplayer-core:${versions.exoplayer}",
        'exoplayer_dash': "com.google.android.exoplayer:exoplayer-dash:${versions.exoplayer}",
        'exoplayer_smooth': "com.google.android.exoplayer:exoplayer-smoothstreaming:${versions.exoplayer}",
        'exoplayer_hls': "com.google.android.exoplayer:exoplayer-hls:${versions.exoplayer}",
        'exoplayer_mediasession': "com.google.android.exoplayer:extension-mediasession:${versions.exoplayer}",

        'junit': 'junit:junit:4.12',
        'mockito': "org.mockito:mockito-core:${versions.mockito}",
        'mockito_inline': "org.mockito:mockito-inline:${versions.mockito}",
        'mockito_nhaarman': 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0',
        'androidx_test_core': 'androidx.test:core:1.3.0',
        'androidx_arch_core_testing': 'androidx.arch.core:core-testing:2.1.0',
        'androidx_fragment_testing': 'androidx.fragment:fragment-testing:1.2.5',
        'roboelectric': 'org.robolectric:robolectric:4.3',

        'androidx_security_crypto': 'androidx.security:security-crypto:1.0.0',
        'androidx_identity_credential': 'androidx.security:security-identity-credential:1.0.0-alpha02',
    ]

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:${versions.androidx_navigation}"
    }
}

def dirLocations = []
dirLocations.add( 'libs')
dirLocations.add(project(':alexa-auto-voice-ui').file('libs'))
dirLocations.add(project(':alexa-auto-voice-interaction').file('libs'))

// Add APL only if enabled
if (hasProperty('enabledAPL')) {
    dirLocations.add(project(':alexa-auto-apl-renderer').file('modules/apl-render/src/main/libs'))
}

allprojects {
    repositories {
        google()
        mavenCentral()
        flatDir {
            dirs dirLocations
        }
    }
    if (project.name != "aacs" && project.name != "alexa-auto-app") {
        def buildTypes = ['Debug', 'Release']
        for (buildType in buildTypes) {
            def tasks = project.getTasksByName('assemble' + buildType, false)
            for (task in tasks) {
                project.task('assembleLocal' + buildType) dependsOn(task)
                project.task('assembleRemote' + buildType) dependsOn(task)
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
